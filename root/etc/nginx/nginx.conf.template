## Version 2024/12/17 - Changelog: https://github.com/linuxserver/docker-baseimage-alpine-nginx/commits/master/root/defaults/nginx/nginx.conf.sample

### Based on alpine defaults
# https://git.alpinelinux.org/aports/tree/main/nginx/nginx.conf?h=3.21-stable

user abc;

# Set number of worker processes automatically based on number of CPU cores.
include /config/nginx/worker_processes.conf;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log /config/log/nginx/error.log;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

# Include files with config snippets into the root context.
include /etc/nginx/conf.d/*.conf;

events {
    # The maximum number of simultaneous connections that can be opened by
    # a worker process.
    worker_connections 1024;
}

http {
    # Includes mapping of file name extensions to MIME types of responses
    # and defines the default type.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Name servers used to resolve names of upstream servers into addresses.
    # It's also needed when using tcpsocket and udpsocket in Lua modules.
    #resolver 1.1.1.1 1.0.0.1 2606:4700:4700::1111 2606:4700:4700::1001;
    include /config/nginx/resolver.conf;

    # Don't tell nginx version to the clients. Default is 'on'.
    server_tokens off;

    # Specifies the maximum accepted body size of a client request, as
    # indicated by the request header Content-Length. If the stated content
    # length is greater than this size, then the client receives the HTTP
    # error code 413. Set to 0 to disable. Default is '1m'.
    client_max_body_size 0;

    # Sendfile copies data between one FD and other from within the kernel,
    # which is more efficient than read() + write(). Default is off.
    sendfile on;

    # Causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames. Default is 'off'.
    tcp_nopush on;

    # all ssl related config moved to ssl.conf
    # included in server blocks where listen 443 is defined

    # Enable gzipping of responses.
    #gzip on;

    # Set the Vary HTTP header as defined in the RFC 2616. Default is 'off'.
    gzip_vary on;

    # Helper variable for proxying websockets.
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Enable http2 by default for all servers
    # http2 on;

    # Sets the path, format, and configuration for a buffered log write.
    access_log /config/log/nginx/access.log;

    # client_body_temp_path /tmp/nginx 1 2;
    # proxy_temp_path /tmp/nginx-proxy;
    # fastcgi_temp_path /tmp/nginx-fastcgi;
    # uwsgi_temp_path /tmp/nginx-uwsgi;
    # scgi_temp_path /tmp/nginx-scgi;

    # proxy_cache_path /tmp/nginx-proxy-cache keys_zone=lsio-proxy:10m;
    # fastcgi_cache_path /tmp/nginx-fcgi-cache keys_zone=lsio-fcgi:10m;
    # scgi_cache_path /tmp/nginx-scgi-cache keys_zone=lsio-scgi:10m;
    # uwsgi_cache_path /tmp/nginx-uwsgi-cache keys_zone=lsio-uwsgi:10m;

    # Includes virtual hosts configs.
    include /etc/nginx/http.d/*.conf;
    # include /config/nginx/site-confs/*.conf;

    # Preserve port in redirects
    port_in_redirect on;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name _;

        set $root /app/www/public;
        if (!-d /app/www/public) {
            set $root /config/www;
        }

        index index.php;

        # This is needed to avoid a redirect loop when using a base URL
        location = ${BASE_URL} {
            return 301 $scheme://$http_host${BASE_URL}/;
        }

        # Alias is set to public root
        location ${BASE_URL}/ {
            alias $root/;
            index index.php;
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ ^${BASE_URL}/(.+\.php)$ {
            alias $root/;
            fastcgi_split_path_info ^${BASE_URL}/(.+\.php)(.*)$;
            fastcgi_pass 127.0.0.1:9000;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $root/$1; # <- This is all it takes to make it work under an alias
            fastcgi_index index.php;
        }

        # API routing
        location ~ ^${BASE_URL}/api/(.*)$ {
            alias $root/;
            fastcgi_pass 127.0.0.1:9000;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $root/api/index.php; # <- Same as above but execute api index.php here
            fastcgi_param QUERY_STRING endpoint=$1&$args;
            fastcgi_index index.php;
        }

        # WebSocket
        location ${BASE_URL}/ws {
            proxy_pass http://127.0.0.1:9910;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 86400;
        }

        # Health check
        location /health {
            return 200 'healthy';
            add_header Content-Type text/plain;
        }

        # Deny .ht*
        location ~ /\.ht {
            deny all;
        }
    }
}

daemon off;
pid /run/nginx.pid;